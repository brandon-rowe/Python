if <player wins serve>:
	score = score + 1

if random() < prob:
	score = score + 1

def main():
	printIntro()
	probA, probB, n = getInputs()
	winsA, winsB = simNgames(n, probA, probB)
	printSummary(winsA, winsB)


CSCI 236 Python Programming Fall 2018


Chapter 9 Activity 1


Calculation of Pi Using the Monte Carlo Method

If a circle of radius R is inscribed inside a square with side length 2R, then the area of the circle will be pi*R^2 and the area of the square will be (2R)^2. So the ratio of the area of the circle to the area of the square will be pi/4. 

This means that, if you pick N points at random inside the square, approximately N*pi/4 of those points should fall inside the circle. 

Question: Write a program to calculate pi using the method above. Show the simulation process using the graphics library.

Hint: your program should pick points at random inside the square. It then checks to see if the point is inside the circle (it knows it's inside the circle if x^2 + y^2 < R^2, where x and y are the coordinates of the point and R is the radius of the circle). The program keeps track of how many points it's picked so far (N) and how many of those points fell inside the circle (M). Pi is then approximated as follows: pi = (4*M)/N. You can set R = 1 and then x and y range from [0,1).
